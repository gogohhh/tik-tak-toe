{"version":3,"sources":["reportWebVitals.js","Square.js","components/board.js","Game.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","className","onClick","value","Board","i","this","squares","renderSquare","Component","calcularGanador","lines","length","a","b","c","Game","reload","window","location","state","history","Array","fill","xIsNext","slice","setState","concat","status","current","ganador","handleClick","class","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3df694ac.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './App.css';\n\nfunction Square(props) {\n\n    return (\n      <button \n        className=\"square\" \n        onClick={props.onClick} \n      >  {/* Ahora se llama la funcion onClick de Board */ }\n       \n        {/* Se manda el nuevo estado de la prop */}\n        {props.value} {/* Se hace el llamdo de la prop value del componente Board  */}\n      </button>\n    );\n  \n}\n\nexport default Square;\n","import React from 'react';\nimport { Component } from 'react';\nimport './styles.css';\nimport Square from '../Square';\n\nclass Board extends Component {\n    \n    renderSquare(i) {\n      return (<Square \n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n             />\n        ); /* Se hace el llamado del componente del boton dentro de una funcion (renderSquare)*/\n    }\n\n    render() {\n      return (\n        <div className=\"centrado\">\n          <div className=\"board-row\"> \n            {this.renderSquare(0)} {/* Se usa la funcion (renderSquare) que contiene el componente boton. */}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  export default Board;","import React from 'react';\nimport { Component } from 'react';\nimport Board from './components/board';\n\n/** funcion para calcular el ganador mediante comprobacion del arreglo  */\nfunction calcularGanador(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n\nclass Game extends Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{   //* Se guardan los movientos del array\n          squares: Array(9).fill(null),\n        }],\n        xIsNext: true,\n      };\n    }\n\n    /** Definimos la funcion handleClick */\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();  /** slice() crea una copia del arreglo para hacerlo inmutable */\n        \n        if (calcularGanador(squares) || squares[i]){\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O'; /** Ahora pasamos el estado de xisNext(boleano) para el manejo de los turnos */\n        this.setState({\n            history: history.concat([{\n              squares: squares,  /** Se combian el arreglo principal con la el array copia */\n            }]),\n            xIsNext: !this.state.xIsNext,\n        })\n    }\n\n    reload = () => {\n      window.location.reload(true);\n    }\n\n  \n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1]; //* Se recorren los movientos anteriores\n        const ganador = calcularGanador(current.squares);\n        let status;\n        if (ganador) {\n          status = 'Ganador: ' + ganador;\n        } else {\n          status = 'Siguiente jug.: ' + (this.state.xIsNext ? 'X' : 'O');\n        } \n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n          </div>\n          <div class=\"reset\">\n            <button type=\"submit\" class=\"reiniciar\" onClick={this.reload}>Reiniciar</button>\n          </div>\n          <div className=\"game-info\">\n            <div className=\"tablero_centrado\">{ status }</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Game from './Game';\n// import Marcador from './Marcador';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n    {/*<Marcador  />*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}